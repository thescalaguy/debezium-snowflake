services:
  # -- Pinot
  pinot-zookeeper:
    image: zookeeper:3.5.6
    container_name: pinot-zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      interval: 5s
      retries: 3
      start_period: 30s
      test: echo srvr | nc pinot-zookeeper 2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    hostname: kafka 
    image: debezium/kafka:3.0.0.Final
    depends_on:
      pinot-zookeeper:
        condition: service_healthy
    environment:
      - KAFKA_BROKER_ID=1
      - ZOOKEEPER_CONNECT=pinot-zookeeper:2181
#      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_HEAP_OPTS=-Xms256m -Xmx256m
      - KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE=false
      - KAFKA_MESSAGE_MAX_BYTES=5242880
      - KAFKA_MAX_MESSAGE_BYTES=5242880
      - CREATE_TOPICS=kafka_connect_config:1:1:compact,kafka_connect_offsets:1:1:compact,kafka_connect_status:1:1:compact
    healthcheck:
      interval: 1s
      retries: 5
      start_period: 60s
      test: nc -z kafka 9092
      timeout: 5s
    ports:
      - "9092:9092"

  debezium:
    image: debezium-snowflake:latest
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - CONFIG_STORAGE_TOPIC=kafka_connect_config
      - OFFSET_STORAGE_TOPIC=kafka_connect_offsets
      - STATUS_STORAGE_TOPIC=kafka_connect_status
      - GROUP_ID=kafka_connect
      - KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
    ports:
      - "8083:8083"
    depends_on:
      - kafka